<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yang719.SpringWeb.mapper.PictureMapper">
  <resultMap id="BaseResultMap" type="cn.yang719.SpringWeb.entity.Picture">
    <!--@mbg.generated-->
    <!--@Table picture-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="picUrl" jdbcType="VARCHAR" property="picurl" />
    <result column="fileSize" jdbcType="VARCHAR" property="filesize" />
    <result column="picHeight" jdbcType="INTEGER" property="picheight" />
    <result column="picWidth" jdbcType="INTEGER" property="picwidth" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, picUrl, fileSize, picHeight, picWidth
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from picture
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from picture
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.yang719.SpringWeb.entity.Picture" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into picture (picUrl, fileSize, picHeight, 
      picWidth)
    values (#{picurl,jdbcType=VARCHAR}, #{filesize,jdbcType=VARCHAR}, #{picheight,jdbcType=INTEGER}, 
      #{picwidth,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.yang719.SpringWeb.entity.Picture" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into picture
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="picurl != null">
        picUrl,
      </if>
      <if test="filesize != null">
        fileSize,
      </if>
      <if test="picheight != null">
        picHeight,
      </if>
      <if test="picwidth != null">
        picWidth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="picurl != null">
        #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null">
        #{filesize,jdbcType=VARCHAR},
      </if>
      <if test="picheight != null">
        #{picheight,jdbcType=INTEGER},
      </if>
      <if test="picwidth != null">
        #{picwidth,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yang719.SpringWeb.entity.Picture">
    <!--@mbg.generated-->
    update picture
    <set>
      <if test="picurl != null">
        picUrl = #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null">
        fileSize = #{filesize,jdbcType=VARCHAR},
      </if>
      <if test="picheight != null">
        picHeight = #{picheight,jdbcType=INTEGER},
      </if>
      <if test="picwidth != null">
        picWidth = #{picwidth,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yang719.SpringWeb.entity.Picture">
    <!--@mbg.generated-->
    update picture
    set picUrl = #{picurl,jdbcType=VARCHAR},
      fileSize = #{filesize,jdbcType=VARCHAR},
      picHeight = #{picheight,jdbcType=INTEGER},
      picWidth = #{picwidth,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserId" resultMap="BaseResultMap">
    select * from picture where id in (select pid from useruploadpic where uid = #{id})
  </select>

  <select id="selectMoreInfoByUserId" resultMap="BaseResultMap">
    select * from picture,userpicupload where userpicupload.uid = #{id} and userpicupload.pid = picture.id
  </select>

  <select id="selectByPicUrl" resultMap="BaseResultMap">
    select * from picture where picUrl = #{url,jdbcType=VARCHAR}
  </select>

  <select id="selectPageByUserId" resultMap="BaseResultMap">
    select * from picture where id in (select pid from useruploadpic where uid = #{id}) limit #{start},#{size}
  </select>

</mapper>